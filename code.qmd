---
title: "Impact of organic fertilizers on quality and post-harvest management of Mango ‘Kent’ (_Mangifera indica_ L.)"
author: "Henry Morocho-Romero; Ricardo Peña-Castillo; Arturo Morales-Pizarro; Junior Domínguez-Chozo; Sandy Vilchez-Navarro; Sebastian Casas-Niño; Gabriela Cárdenas-Huamán; Nery Tirabante-Terrones; Esdwin-Oberti Nuñez-Ticliahunca; Ana-Gabriela Montañez-Artica; Leslie Velarde-Apaza; Max Ramirez-Rojas; Juancarlos Cruz; Flavio Lozano-Isla."
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
    output-file: "ESM_2"
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  echo: true
---

# Project Setup

```{r}
#| label:  setup

library(emmeans)
library(corrplot)
library(multcomp)
library(FSA)
library(car)
library(factoextra)
library(corrplot)
source('https://inkaverse.com/setup.r')

cat("Project: ", getwd(), "\n")
session_info()
```

# Import data

Data was imported from the field book evaluated during the 2022-2023 growing season. The evaluations focused on mango fruits of the ‘Kent’ variety at two stages: physiological maturity and commercial maturity.

```{r}
url <- "https://docs.google.com/spreadsheets/d/1UzF2W_rfOLLybl-wiD2sJSVPHlfzfKXXgShnqhfX5ps/edit?gid=912027622#gid=912027622"

gs <- url %>% 
  as_sheets_id()

data <- gs %>% 
  range_read("fb") %>% 
  select(-c(barcode:plots)) %>% 
  select(-c(sort,rows,cols)) %>% 
  pivot_longer(
    cols = -c(ntreat, Tipo.de.control, block),
    names_to = c("grupo", "id_variable", "repeticion"),
    names_sep = "_",
    values_to = "valor"
  ) %>%
  mutate(
    grupo = factor(grupo),
    id_variable = as.numeric(id_variable),
    repeticion = as.integer(repeticion),
    ntreat = as.factor(ntreat),
    block = as.factor(block),
    Tipo.de.control = as.factor(Tipo.de.control),
    id_variable = as.factor(id_variable),
    repeticion  = as.factor(repeticion )
  ) %>%
  pivot_wider(
    names_from = grupo,     
    values_from = valor     
  ) %>% 
  mutate(Tipo.de.control = recode(Tipo.de.control,
    "Testigo" = "Control",
    "Control.químico" = "Chemical control",
    "Beauveria.bassiana" = "Beauveria bassiana",
    "Metarhizium.anisopliae" = "Metarhizium anisopliae",
    "Paecilomyces.lilacinus" = "Paecilomyces lilacinus"
  ))

names(data)

str(data)
```

```{r}
rendimiento %>% kable(caption = "Yield related traits")

fisio %>% kable(caption = "Evaluation of fruits at fisiological maturity")

consumo %>% kable(caption = "Evaluation of fruits at commercial maturity")
```

# Data summary

Summary of the number of data points recorded for each treatment and evaluated variable.

```{r}
sm <- fisio %>% 
  group_by(treat) %>% 
  summarise(across(pcfmf:rpp, ~ sum(!is.na(.))))

sm

sm <- consumo %>% 
  group_by(treat) %>% 
  summarise(across(pdfmc:imf, ~ sum(!is.na(.))))

sm
```

# Meteorological data

Climatic conditions of the study area located in the Tambogrande district, Piura region.

```{r}
met <- range_read(ss = gs, sheet = "clima") %>% 
  mutate(date = as_date(Fecha))

scale <- 3

plot <- met %>% 
  ggplot(aes(x = date)) +
  geom_line(aes(y = TMax, color = "Tmax (°C)"), size= 0.8, linetype = "longdash") + 
  geom_line(aes(y = TMin, color = "Tmin (°C)"), size= 0.8, linetype = "dotted") +
  geom_bar(aes(y = PP/scale)
            , stat="identity", size=.1, fill="blue", color="black", alpha=.4) +
  geom_line(aes(y = HR/scale, color = "HR (%)"), size = 0.8, linetype = "twodash") +
  scale_color_manual("", values = c("skyblue", "red", "blue")) +
  scale_y_continuous(limits = c(0, 50)
                     , expand = c(0, 0)
                     , name = "Temperature (°C)"
                     , sec.axis = sec_axis(~ . * scale, name = "Precipitation (mm)")
                     ) +
  scale_x_date(date_breaks = "7 day", date_labels = "%d-%b", name = NULL) +
  theme_minimal_grid() +
  theme(legend.position = "top") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot %>% 
  ggsave2(plot = ., "submission/Figure_1.jpg", units = "cm"
         , width = 25, height = 15)

plot %>% 
  ggsave2(plot = ., "submission/Figure_1.eps", units = "cm"
         , width = 25, height = 15)

knitr::include_graphics("submission/Figure_1.jpg")
```

# Objetives

The objective of this study is to demonstrate the effect of organic fertilizers, specifically compost and biol, applied at the soil and foliar levels on the quality of mango fruit at physiological and commercial maturity.

## Specific Objective 1

Demonstrate the effect of organic fertilizers, specifically compost and biol, applied at the soil and foliar levels on the quality of mango fruit at physiological maturity.

### Numero de huevos

```{r}
datos_ndh <- data %>% filter(!is.na(ndh))

modelo_ndh <- glm(ndh ~ Tipo.de.control * id_variable + block,
                  family = poisson(link = "log"),
                  data = datos_ndh)

anova(modelo_ndh, test = "Chisq")

Anova(modelo_ndh, type = 3)

# Calcular dispersión: si >>1, hay sobredispersión

deviance(modelo_ndh) / df.residual(modelo_ndh)

modelo_ndh_quasi <- glm(ndh ~ Tipo.de.control * id_variable + block,
                        family = quasipoisson(link = "log"),
                        data = datos_ndh)

Anova(modelo_ndh_quasi, type = 3)

anova(modelo_ndh_quasi, test = "Chisq")

mc1 <- emmeans(modelo_ndh_quasi, ~ Tipo.de.control | id_variable, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  rename(sig1 = ".group")

mc2 <- emmeans(modelo_ndh_quasi, ~ id_variable | Tipo.de.control, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  mutate(across(".group", ~ toupper(.))) %>% 
  rename(sig2 = ".group")

mc <- merge(mc2, mc1) %>% 
  unite(col = "group", c("sig2", "sig1"), sep = "")

mc %>% kable()

p1a <- mc %>% 
  plot_smr(x = "id_variable"
           , y = "rate"
           , group = "Tipo.de.control"
           , sig = "group"
           # , error = "SE"
           , color = T
           , xlab = "Evaluation days"
           , ylab = "Eggs (u)"
           , glab = "Control Type"
           , ylimits = c(0, 35, 5)
           , 
           ) +
  guides(fill = guide_legend(label.theme = element_text(face = "italic")))

p1a
```

### Numero de ninfas

```{r}
datos_ndn <- data %>% filter(!is.na(ndn))

modelo_ndn <- glm(ndn ~ Tipo.de.control * id_variable + block,
                  family = poisson(link = "log"),
                  data = datos_ndn)

anova(modelo_ndn, test = "Chisq")

Anova(modelo_ndn, type = 3)

# Calcular dispersión: si >>1, hay sobredispersión

deviance(modelo_ndn) / df.residual(modelo_ndn)

modelo_ndn_quasi <- glm(ndn ~ Tipo.de.control * id_variable + block,
                        family = quasipoisson(link = "log"),
                        data = datos_ndn)

Anova(modelo_ndn_quasi, type = 3)

anova(modelo_ndn_quasi, test = "Chisq")

mc1 <- emmeans(modelo_ndn_quasi, ~ Tipo.de.control | id_variable, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  rename(sig1 = ".group")

mc2 <- emmeans(modelo_ndn_quasi, ~ id_variable | Tipo.de.control, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  mutate(across(".group", ~ toupper(.))) %>% 
  rename(sig2 = ".group")

mc <- merge(mc2, mc1) %>% 
  unite(col = "group", c("sig2", "sig1"), sep = "")

mc %>% kable()

p1b <- mc %>% 
  plot_smr(x = "id_variable"
           , y = "rate"
           , group = "Tipo.de.control"
           , sig = "group"
           # , error = "SE"
           , color = T
           , xlab = "Evaluation days"
           , ylab = " Nymphs (u)"
           , glab = "Control Type"
           , ylimits = c(0, 35, 5)
           , 
           )+
  guides(fill = guide_legend(label.theme = element_text(face = "italic")))

p1b
```

### Numero de adultos

```{r}
datos_nda <- data %>% filter(!is.na(nda))

modelo_nda <- glm(nda ~ Tipo.de.control * id_variable + block,
                  family = poisson(link = "log"),
                  data = datos_ndn)

anova(modelo_nda, test = "Chisq")

Anova(modelo_nda, type = 3)

# Calcular dispersión: si >>1, hay sobredispersión

deviance(modelo_nda) / df.residual(modelo_nda)

# modelo_nda_quasi <- glm(nda ~ Tipo.de.control * id_variable + block,
#                         family = quasipoisson(link = "log"),
#                         data = datos_nda)
# 
# Anova(modelo_nda_quasi, type = 3)
# 
# anova(modelo_nda_quasi, test = "Chisq")

mc1 <- emmeans(modelo_nda, ~ Tipo.de.control | id_variable, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  rename(sig1 = ".group")

mc2 <- emmeans(modelo_nda, ~ id_variable | Tipo.de.control, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  mutate(across(".group", ~ toupper(.))) %>% 
  rename(sig2 = ".group")

mc <- merge(mc2, mc1) %>% 
  unite(col = "group", c("sig2", "sig1"), sep = "")

mc %>% kable()

p1c <- mc %>% 
  plot_smr(x = "id_variable"
           , y = "rate"
           , group = "Tipo.de.control"
           , sig = "group"
           # , error = "SE"
           , color = T
           , xlab = "Evaluation days"
           , ylab = "Adults (u)"
           , glab = "Control Type"
           , ylimits = c(0, 0.8, 0.2)
           , 
           )+
  guides(fill = guide_legend(label.theme = element_text(face = "italic")))

p1c
```

### Figure 2

Univariate analysis of the variables for determining the physiological maturity of the fruit at harvest time and for preventing handling damage during commercialization or industrial processes.

```{r}
legend <- cowplot::get_plot_component(p1a, 'guide-box-top', return_all = TRUE)

p1 <- list(p1a + labs(x = NULL) + theme(legend.position="none"
                                        , axis.title.x=element_blank()
                                        , axis.text.x=element_blank()
                                        , axis.ticks.x=element_blank())
           # , p1b + labs(x = NULL) + theme(legend.position="none"
           #                              , axis.title.x=element_blank()
           #                              , axis.text.x=element_blank()
           #                              , axis.ticks.x=element_blank())
           # , p1c + labs(x = NULL) + theme(legend.position="none"
           #                              , axis.title.x=element_blank()
           #                              , axis.text.x=element_blank()
           #                              , axis.ticks.x=element_blank())
           , p1b + labs(x = NULL) + theme(legend.position="none"
                                        , axis.title.x=element_blank()
                                        , axis.text.x=element_blank()
                                        , axis.ticks.x=element_blank())
           , p1c + theme(legend.position="none")
           ) %>% 
  plot_grid(plotlist = ., ncol = 1
            , labels = "auto"
            ) 

fig <- plot_grid(legend, p1, ncol = 1, align = 'v', rel_heights = c(0.05, 1))
  
fig %>% 
  ggsave2(plot = ., "submission/Figure_2.jpg"
         , units = "cm"
         , width = 35
         , height = 30
         )

fig %>% 
  ggsave2(plot = ., "submission/Figure_2.eps"
         , units = "cm"
         , width = 35
         , height = 30
         )

knitr::include_graphics("submission/Figure_2.jpg")
```

### Peso de planta

```{r}
datos_ppp <- data %>% filter(!is.na(ppp))

trait <- "ppp"

lmm <- paste({{trait}}, "~ 1 + (1|block) + Tipo.de.control") %>% as.formula()

lmd <- paste({{trait}}, "~ block + Tipo.de.control") %>% as.formula()

rmout <- datos_ppp %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ Tipo.de.control) %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  rename(sig1 = ".group")

mc %>% kable()

p2a <- mc %>% 
  plot_smr(x = "Tipo.de.control"
           , y = "emmean"
           # , group = "edge"
           , sig = "sig1"
           # , error = "SE"
           , color = T
           , xlab = "NULL"
           , ylab = "Plant weight (g)"
           , glab = "Control Type"
           , ylimits = c(0, 220, 40)
           , 
           ) +
  guides(fill = guide_legend(label.theme = element_text(face = "italic"))) +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())

p2a
```

### Numero de tuberculos

```{r}
datos_ntp <- data %>% filter(!is.na(ntp))

modelo_ntp <- glm(ntp ~ Tipo.de.control + block,
                  family = poisson(link = "log"),
                  data = datos_ntp)

anova(modelo_ndn, test = "Chisq")

Anova(modelo_ndn, type = 3)

# Calcular dispersión: si >>1, hay sobredispersión

# deviance(modelo_ntp) / df.residual(modelo_ntp)
# 
# modelo_ntp_quasi <- glm(ntp ~ Tipo.de.control + block,
#                         family = quasipoisson(link = "log"),
#                         data = datos_ntp)
# 
# Anova(modelo_ntp_quasi, type = 3)
# 
# anova(modelo_ndn_quasi, test = "Chisq")

mc <- emmeans(modelo_ntp, ~ Tipo.de.control, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  rename(sig1 = ".group")

mc %>% kable()

p2b <- mc %>% 
  plot_smr(x = "Tipo.de.control"
           , y = "rate"
           # , group = "Tipo.de.control"
           , sig = "sig1"
           # , error = "SE"
           , color = T
           , xlab = "NULL"
           , ylab = " Tubers (u)"
           , glab = "Control Type"
           , ylimits = c(0, 8, 2)
           , 
           )+
  guides(fill = guide_legend(label.theme = element_text(face = "italic")))

p2b
```

### Figure 3

Univariate analysis of the variables for determining the physiological maturity of the fruit at harvest time and for preventing handling damage during commercialization or industrial processes.

```{r}
legend <- cowplot::get_plot_component(p2a, 'guide-box-top', return_all = TRUE)

p2 <- list(p2a + labs(x = NULL) + theme(legend.position="none"
                                        , axis.title.x=element_blank()
                                        , axis.text.x=element_blank()
                                        , axis.ticks.x=element_blank())
           # , p1b + labs(x = NULL) + theme(legend.position="none"
           #                              , axis.title.x=element_blank()
           #                              , axis.text.x=element_blank()
           #                              , axis.ticks.x=element_blank())
           # , p1c + labs(x = NULL) + theme(legend.position="none"
           #                              , axis.title.x=element_blank()
           #                              , axis.text.x=element_blank()
           #                              , axis.ticks.x=element_blank())
           # , p1b + labs(x = NULL) + theme(legend.position="none"
           #                              , axis.title.x=element_blank()
           #                              , axis.text.x=element_blank()
           #                              , axis.ticks.x=element_blank())
           , p2b + theme(legend.position="none")
           ) %>% 
  plot_grid(plotlist = ., ncol = 1
            , labels = "auto"
            ) 

fig <- plot_grid(p2, ncol = 1, align = 'v', rel_heights = c(0.05, 1))
  
fig %>% 
  ggsave2(plot = ., "submission/Figure_3.jpg"
         , units = "cm"
         , width = 24
         , height = 12
         )

fig %>% 
  ggsave2(plot = ., "submission/Figure_3.eps"
         , units = "cm"
         , width = 20
         , height = 10
         )

knitr::include_graphics("submission/Figure_3.jpg")
```

### Punta morada

```{r}
datos_npm <- data %>% filter(!is.na(npm))

modelo_npm <- glm(npm ~ Tipo.de.control + block,
                  family = binomial(link = "logit"),
                  data = datos_npm)

summary(modelo_npm)

anova(modelo_npm, test = "Chisq")


mc <- emmeans(modelo_npm, ~ Tipo.de.control, type = "response") %>%
  cld(Letters = letters, reversed = T) %>% 
  mutate(across(".group", ~ trimws(.))) %>% 
  rename(sig1 = ".group")

mc %>% kable()

p3 <- mc %>% 
  plot_smr(x = "Tipo.de.control"
           , y = "prob"
           # , group = "Tipo.de.control"
           , sig = "sig1"
           # , error = "SE"
           , color = T
           , xlab = "Control Type"
           , ylab = " Probability of presence of purple tip"
           , glab = "NULL"
           , ylimits = c(0, 1, 0.2)
           , 
           ) 

p3
```



